- name: install catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: setup NPM service
    ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash

  - name: install nodejs
    ansible.builtin.yum:
      name: nodejs
      state: installed
  
  - name: check the roboshop user exit or not
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true
 
  - name: create user
    when: out.rc != 0     
    ansible.builtin.user:
      name: roboshop

  - name: checking the directory
    ansible.builtin.stat:
      path: /app
    register: dir_status

  - name: create /app directory
    when: dir_status.stat.exists == False
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download catalogue.zip to /tmp
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp/catalogue.zip  

  - name: unzip the catalogue.zip into /app dir_status
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependinces
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy Catalogue Service
    ansible.builtin.copy:
      src: /home/ec2-user/ansible-roboshop/catalogue.service/
      dest: /etc/systemd/system/catalogue.service 
  
  - name: Load the service
    ansible.builtin.command: systemctl daemon-reload
    become: true

  - name: Copy mongo.repo
    ansible.builtin.copy:
      src: /home/ec2-user/ansible-roboshop/mongo.repo/
      dest: /etc/yum.repos.d/mongo.repo

  - name: Install MongoDB shell
    ansible.builtin.yum:
      name: mongodb-mongosh
      state: installed

  - name: load catalogue data into mongodb
    ansible.builtin.command: mongosh --host mongodb.practicedevops.store </app/schema/catalogue.js 

  - name: start and enable the nodejs
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: true




        